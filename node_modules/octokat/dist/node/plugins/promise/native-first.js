'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _require = require('../../helpers/promise-find-native'),
    newPromise = _require.newPromise,
    allPromises = _require.allPromises;

if (!newPromise || !allPromises) {
  var _require2 = require('../../helpers/promise-find-library');

  newPromise = _require2.newPromise;
  allPromises = _require2.allPromises;
}
if ((typeof window === 'undefined' || window === null) && !newPromise) {
  var _require3 = require('../../adapters/promise');

  newPromise = _require3.newPromise;
  allPromises = _require3.allPromises;
}

if (typeof window !== 'undefined' && window !== null && !newPromise) {
  // Otherwise, show a warning (library can still be used with just callbacks)
  if (window.console && window.console.warn) {
    window.console.warn('Octokat: A Promise API was not found. Supported libraries that have Promises are jQuery, angularjs, and es6-promise');
  }
} else if ((typeof window === 'undefined' || window === null) && !newPromise) {
  // Running in NodeJS
  throw new Error('Could not find a promise lib for node. Seems like a bug');
}

module.exports = new function PreferNativeOverLibraryPromises() {
  _classCallCheck(this, PreferNativeOverLibraryPromises);

  this.promiseCreator = { newPromise: newPromise, allPromises: allPromises };
}();
//# sourceMappingURL=native-first.js.map
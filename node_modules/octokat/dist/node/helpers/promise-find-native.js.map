{"version":3,"sources":["../../../src/helpers/promise-find-native.js"],"names":["Promise","newPromise","resolve","reject","fulfill","fn","bind","arguments","allPromises","all","promises"],"mappings":";;;;;AAAA,IAAI,OAAOA,OAAP,KAAmB,WAAnB,IAAkCA,YAAY,IAAlD,EAAwD;AACtD,MAAIC,aAAa,SAAbA,UAAa,KAAM;AAAE,WAAO,IAAID,OAAJ,CAAY,UAAUE,OAAV,EAAmBC,MAAnB,EAA2B;AACrE;AACA;AACA,UAAID,QAAQE,OAAZ,EAAqB;AACnB,eAAOC,GAAGH,QAAQA,OAAR,CAAgBI,IAAhB,CAAqBJ,OAArB,CAAH,EAAkCA,QAAQC,MAAR,CAAeG,IAAf,CAAoBJ,OAApB,CAAlC,CAAP;AACD,OAFD,MAEO;AACL,eAAOG,oBAAME,SAAN,CAAP;AACD;AACF,KAR+B,CAAP;AAQrB,GARJ;;AAUA,MAAIC,cAAc,SAAdA,WAAc;AAAA,WAAYR,QAAQS,GAAR,CAAYC,QAAZ,CAAZ;AAAA,GAAlB;AACD;;QAEQT,U,GAAAA,U;QAAYO,W,GAAAA,W","file":"promise-find-native.js","sourcesContent":["if (typeof Promise !== 'undefined' && Promise !== null) {\n  var newPromise = fn => { return new Promise(function (resolve, reject) {\n    // Some browsers (like node-webkit 0.8.6) contain an older implementation\n    // of Promises that provide 1 argument (a `PromiseResolver`).\n    if (resolve.fulfill) {\n      return fn(resolve.resolve.bind(resolve), resolve.reject.bind(resolve))\n    } else {\n      return fn(...arguments)\n    }\n  }) }\n\n  var allPromises = promises => Promise.all(promises)\n}\n\nexport { newPromise, allPromises }\n"]}